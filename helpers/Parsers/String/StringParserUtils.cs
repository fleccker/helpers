using System.Collections.Generic;

namespace helpers.Parsers.String
{
    public static class StringParserUtils
    {
        public static readonly IReadOnlyDictionary<char, char> AliasMap = new Dictionary<char, char>()
        {
            { '\'', '\'' },
            { '\"', '\"' },
            { '«', '»' },
            { '‘', '’' },
            { '“', '”' },
            { '„', '‟' },
            { '‹', '›' },
            { '‚', '‛' },
            { '《', '》' },
            { '〈', '〉' },
            { '「', '」' },
            { '『', '』' },
            { '〝', '〞' },
            { '﹁', '﹂' },
            { '﹃', '﹄' },
            { '＂', '＂' },
            { '＇', '＇' },
            { '｢', '｣' },
            { '(', ')' },
            { '༺', '༻' },
            { '༼', '༽' },
            { '᚛', '᚜' },
            { '⁅', '⁆' },
            { '⌈', '⌉' },
            { '⌊', '⌋' },
            { '❨', '❩' },
            { '❪', '❫' },
            { '❬', '❭' },
            { '❮', '❯' },
            { '❰', '❱' },
            { '❲', '❳' },
            { '❴', '❵' },
            { '⟅', '⟆' },
            { '⟦', '⟧' },
            { '⟨', '⟩' },
            { '⟪', '⟫' },
            { '⟬', '⟭' },
            { '⟮', '⟯' },
            { '⦃', '⦄' },
            { '⦅', '⦆' },
            { '⦇', '⦈' },
            { '⦉', '⦊' },
            { '⦋', '⦌' },
            { '⦍', '⦎' },
            { '⦏', '⦐' },
            { '⦑', '⦒' },
            { '⦓', '⦔' },
            { '⦕', '⦖' },
            { '⦗', '⦘' },
            { '⧘', '⧙' },
            { '⧚', '⧛' },
            { '⧼', '⧽' },
            { '⸂', '⸃' },
            { '⸄', '⸅' },
            { '⸉', '⸊' },
            { '⸌', '⸍' },
            { '⸜', '⸝' },
            { '⸠', '⸡' },
            { '⸢', '⸣' },
            { '⸤', '⸥' },
            { '⸦', '⸧' },
            { '⸨', '⸩' },
            { '【', '】'},
            { '〔', '〕' },
            { '〖', '〗' },
            { '〘', '〙' },
            { '〚', '〛' }
        };

        public static bool IsOpen(char c) => AliasMap.ContainsKey(c);
        public static char GetMatch(char c) => AliasMap.TryGetValue(c, out var match) ? match : '\"';
    }
}
